#+TITLE: Lab Book Fluotracify
#+AUTHOR: Alexander Seltmann
#+LANGUAGE: en
# If exporting the existing code and execution to html or pdf etc, uncomment the
# following properties to avoid org-babel to execute the code blocks again, and
# to export both the code AND the results
# #+PROPERTY: header-args :eval never-export :exports both

* README
** General:
   - This file corresponds to my lab book for my doctoral thesis tackling
     artifact correction in Fluorescence Correlation Spectroscopy (FCS)
     measurements using Deep Neural Networks
   - It contains explanations of how things are organized, of the workflow for
     doing experiments, changes made to the code, and the observed behavior in
     the "* Data" section.
   - The branching model used is described in [[http://starpu-simgrid.gforge.inria.fr/misc/SIGOPS_paper.pdf][this paper]]. Following this, if you
     are interested in the "* Data" section, you have to =git clone= the /data/
     branch. The /master/ branch is clean from any results, it contains only
     source code and the analysis.
** Experiments workflow:
   1) Create a new branch
   2) Make sure everything is commited
   3) ...
   4) Do the analysis
   5) Add to this file into "* Data" section the entry for the results, using
      the template described below
   6) Commit/push the results of this separate branch
   7) Merge this new branch with the remote "data" branch
** Example for simulation...
** Example for ...
** Example for ...
* Template for data entry:
** xp#
*** git:
#+begin_src sh
git log -1
#+end_src
*** System Metadata

*** Notes:
    ######################
* Organization of git
** tools used
*** - Emacs =magit=
- =gitflow-avh= (=magit-flow=) to follow the
- possibly https://github.com/magit/magit-annex for large files. Follow this:
  https://git-annex.branchable.com/walkthrough/
- maybe check out git-toolbelt at some point
  https://github.com/nvie/git-toolbelt#readme with
  https://nvie.com/posts/git-power-tools/
*** jupyter notebooks
- jupytext: https://github.com/mwouts/jupytext
- nbstripout: https://github.com/kynan/nbstripout
*** mlflow
- https://docs.faculty.ai/user-guide/experiments/index.html and
  https://docs.microsoft.com/en-us/azure/databricks/_static/notebooks/hls-image-processing/02-image-segmentation-dl.html
*** tensorflow
https://www.tensorflow.org/tensorboard/image_summaries
** remote/origin/master branch:
   - Has all the source, analysis, scripts
** remote/origin/xp# branches:
   - Have all the data connected to specific experiments
   - Also some important (not all) .pdf files
** remote/origin/data branch:
   - Merging all the data and source branches
   - It is cloned only on my local machine, never clone it on a remote one
* Git TAGs
** Stable versions:
*** stable13
  StarPU version: trunk 14405
  Simgrid: c78eee2
  qrm_starpu: r1393
  new_magmamorse: r1799
*** stable13.1
  StarPU version: trunk 14405
  Simgrid: c78eee2
  qrm_starpu: r1443
  new_magmamorse: r1799
** All tags from git:
#+begin_src sh :results output
 git push origin --tags
 git tag -n1
#+end_src

* Organization of code
** scripts:
*** run_bench_StarPU.sh [4/4]:                                        :@LUKA:
    - Runs benchmarking of StarPU without Simgrid
    - [X] Write a usage/help part, add environment variables
    - [X] Upgrade for interective mode
    - [X] Change verbose
    - [X] Add frequency scaling only if the file exists, otherwise write "unknown
** src/
*** fluotracify/
**** imports/
**** simulations/
**** training/
**** applications/
**** doc/
- use Sphinx
  - follow this: https://daler.github.io/sphinxdoc-test/includeme.html
  - evtl export org-mode Readme to rst via https://github.com/msnoigrs/ox-rst
  - possibly heavily use
    http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html
  - for examples sphinx-galleries could be useful
    https://sphinx-gallery.github.io/stable/getting_started.html

*** nanosimpy/
- cloned from dwaithe with refactoring for Python 3-compatibility

* Changes in this Lab book template (without "* Data")
** 2020-03-30
   - set up lab book and form git repo accoring to setup by Luka Stanisic et al
* Data
** exp-200330-test
   :PROPERTIES:
   :Effort:   4:00
   :END:
   :LOGBOOK:
   CLOCK: [2020-03-31 Di 12:51]--[2020-03-31 Di 12:51] =>  0:00
   CLOCK: [2020-03-30 Mo 20:48]--[2020-03-30 Mo 20:54] =>  0:06
   CLOCK: [2020-03-30 Mo 20:28]--[2020-03-30 Mo 20:48] =>  0:20
   CLOCK: [2020-03-30 Mo 18:34]--[2020-03-30 Mo 20:28] =>  1:54
   CLOCK: [2020-03-30 Mo 18:23]--[2020-03-30 Mo 18:24] =>  0:01
   CLOCK: [2020-03-30 Mo 17:33]--[2020-03-30 Mo 17:58] =>  0:25
   CLOCK: [2020-03-30 Mo 16:39]--[2020-03-30 Mo 16:39] =>  0:00
   CLOCK: [2020-03-30 Mo 16:31]--[2020-03-30 Mo 16:38] =>  0:07
   CLOCK: [2020-03-30 Mo 16:02]--[2020-03-30 Mo 16:03] =>  0:01
   CLOCK: [2020-03-30 Mo 15:36]--[2020-03-30 Mo 15:43] =>  0:07
   CLOCK: [2020-03-30 Mo 15:23]--[2020-03-30 Mo 15:25] =>  0:02
   :END:
- first, use "clocking" in org-mode to record time working on this branch with
  =C-c C-x C-i=

#+BEGIN: clocktable :scope subtree :maxlevel 8
#+CAPTION: Clock summary at [2020-04-02 Do 12:09]
| Headline                                   | Time   |      |      |      |
|--------------------------------------------+--------+------+------+------|
| *Total time*                               | *4:37* |      |      |      |
|--------------------------------------------+--------+------+------+------|
| \_  exp-200330-test                        |        | 4:37 |      |      |
| \_    Experimentation diary                |        |      | 1:34 |      |
| \_      Learn about hard vs soft links     |        |      |      | 0:08 |
| \_      Learn about Org-mode's column view |        |      |      | 0:01 |
| \_      Learning about org-mode's clocking |        |      |      | 0:19 |
| \_      Configure Emacs setup (neotree)    |        |      |      | 1:01 |
#+END:

*** git
#+begin_src sh
git log -1
#+end_src

#+RESULTS:
| commit  | 7a2f40149b15e3a639396abfe86e75bd57db55a3 |                        |    |          |      |       |
| Author: | Apoplex                                  | <oligolex@vivaldi.net> |    |          |      |       |
| Date:   | Sun                                      | Mar                    | 29 | 17:41:27 | 2020 | +0200 |
|         |                                          |                        |    |          |      |       |
| Add     | LabBook.org                              |                        |    |          |      |       |
|         |                                          |                        |    |          |      |       |
*** DONE Experimentation diary
    CLOSED: [2020-03-30 Mo 21:50]
    :LOGBOOK:
    CLOCK: [2020-03-30 Mo 16:22]--[2020-03-30 Mo 16:24] =>  0:02
    CLOCK: [2020-03-30 Mo 16:22]--[2020-03-30 Mo 16:22] =>  0:00
    CLOCK: [2020-03-30 Mo 15:33]--[2020-03-30 Mo 15:36] =>  0:03
    CLOCK: [2020-03-30 Mo 15:27]--[2020-03-30 Mo 15:27] =>  0:00
    :END:
**** DONE Learn about hard vs soft links
     CLOSED: [2020-03-30 Mo 16:39]
     :PROPERTIES:
     :TAGS_ALL: a
     :END:
     :LOGBOOK:
     CLOCK: [2020-03-30 Mo 18:23]--[2020-03-30 Mo 18:23] =>  0:00
     CLOCK: [2020-03-30 Mo 16:26]--[2020-03-30 Mo 16:31] =>  0:05
     CLOCK: [2020-03-30 Mo 16:19]--[2020-03-30 Mo 16:22] =>  0:03
     :END:
**** DONE Learn about Org-mode's column view
     CLOSED: [2020-03-30 Mo 16:38]
     :LOGBOOK:
     CLOCK: [2020-03-30 Mo 17:59]--[2020-03-30 Mo 17:59] =>  0:00
     CLOCK: [2020-03-30 Mo 17:58]--[2020-03-30 Mo 17:59] =>  0:01
     :END:
     - on: =C-c C-x C-c=
     - off: press =q= while cursor is on highlighted entry
**** DONE Learning about org-mode's clocking
     CLOSED: [2020-03-30 Mo 19:26]
     :LOGBOOK:
     CLOCK: [2020-03-30 Mo 18:04]--[2020-03-30 Mo 18:21] =>  0:17
     CLOCK: [2020-03-30 Mo 17:59]--[2020-03-30 Mo 18:01] =>  0:02
     CLOCK: [2020-03-30 Mo 17:58]--[2020-03-30 Mo 17:58] =>  0:00
     :END:
     - https://writequit.org/denver-emacs/presentations/2017-04-11-time-clocking-with-org.html
       tipps and tricks
     - I'll keep one clock going in the "** exp#" section when I start with =C-c
       C-x C-i=
     - I'll check out when I leave the computer or do something else on the
       computer with =C-c C-x C-o=
     - When I come back, I'll jump to the current clock with =C-c C-x C-j= and
       clock in at the last task with =C-c C-x C-x=
**** DONE Configure Emacs setup (neotree)
     CLOSED: [2020-03-30 Mo 20:30]
     :LOGBOOK:
     CLOCK: [2020-03-31 Di 12:51]--[2020-03-31 Di 12:51] =>  0:00
     CLOCK: [2020-03-30 Mo 19:30]--[2020-03-30 Mo 20:31] =>  1:01
     :END:
** exp-200331-test
   SCHEDULED: <2020-03-31 Di>
   :PROPERTIES:
   :Effort:   4:00
   :END:
   :LOGBOOK:
   CLOCK: [2020-03-31 Di 12:51]--[2020-03-31 Di 12:59] =>  0:08
   :END:
#+BEGIN: clocktable :scope subtree :maxlevel 8
#+CAPTION: Clock summary at [2020-04-02 Do 12:09]
| Headline                                        | Time   |      |      |      |
|-------------------------------------------------+--------+------+------+------|
| *Total time*                                    | *3:06* |      |      |      |
|-------------------------------------------------+--------+------+------+------|
| \_  exp-200331-test                             |        | 3:06 |      |      |
| \_    Technical Setup diary                     |        |      | 2:58 |      |
| \_      Test if remote HPC is accessible via... |        |      |      | 2:58 |
#+END:

*** DONE Technical Setup diary
    CLOSED: [2020-04-02 Do 11:59]
**** DONE [#A] Test if remote HPC is accessible via org-mode
     CLOSED: [2020-04-02 Do 11:59]
     :LOGBOOK:
     CLOCK: [2020-04-02 Do 11:58]--[2020-04-02 Do 11:59] =>  0:01
     CLOCK: [2020-04-02 Do 11:20]--[2020-04-02 Do 11:38] =>  0:18
     CLOCK: [2020-04-01 Mi 13:38]--[2020-04-01 Mi 14:17] =>  0:39
     CLOCK: [2020-04-01 Mi 11:28]--[2020-04-01 Mi 13:09] =>  1:41
     CLOCK: [2020-03-31 Di 14:27]--[2020-03-31 Di 14:27] =>  0:00
     CLOCK: [2020-03-31 Di 13:15]--[2020-03-31 Di 13:31] =>  0:16
     CLOCK: [2020-03-31 Di 12:59]--[2020-03-31 Di 13:02] =>  0:03
     :END:
***** Learning =org-babel=
- https://orgmode.org/manual/Results-of-Evaluation.html (ff) best explanation of
  header arguments. Collection > Type > Format > Handling are classes for
  =:results=
  + Collection:
    * =value= (default), wraps code in function, for python to output something
      you need a return statement
    * =output=: scripting mode
  + Type:
    * =table=, =vector=, =list=
    * =verbatim=, puts results in a =#+begin_example=- Block
    * =file=, can save output e.g. as pdf with =:results value file :file
      circle.pdf=
  + Format:
    * =code=, =drawer=, =html= (begin_export html), =latex= (begin_export
      latex)
    * =link=, =graphics= include link to file on disk, if used with =file= type
    * =org=, =raw=
    * =pp=, pretty printed source code enclosed in a code block. Python is
      supported!
  + Handling
    * =silent=, do not insert results in the org mode buffer, but echo in the
      minibuffer
    * =replace= (default), insert results in org buffer, remove previous results
    * =append= / =prepend=, append results to org buffer, latest results at
      bottom / top
- =:var= can be used to hand a variable to the block
- =:wrap= can be used for custom export blocks, everything given is appended to
  the =#+BEGIN= and =#+END= block of the results  (and overrides the results
  values). E.g. =:wrap EXPORT markdown= results in =#+BEGIN_EXPORT markdown=
- =:post=
- =:session=
  + =none= (default no :session argument), each code block gets new interpreter
    process
  + any STRING, so that code blocks share the same environment (are run in same
  interpreter process).
  + plain =:session=, session name derived from source language
- =:dir= for choosing working directory. things like =:dir ~/work= works.
  setting =:mkdirp yes= (non-nil) creates
  the directory, if it is not there yet
  + (default) - current directory is used
  + Tramp syntax works for remote code execution, e.g. =:file plot.png :dir
    /scp:dand@yakuba.princeton.edu:= captures text for insertion in org file,
    and inserts a link to the remote file thanks to Emacs Tramp
  + when using =dir= with =session=, the starting dir is only set for this
    session, not for others
  + do not use =dir= with =:exports results= or =:exports both= to avoid org
    inserting incorrect links
- =:cache= if set to yes, the results are not re-evaluated if nothing changed
  since the previous run.
  + Suitable fo functions that only rely on input arguments (not timer, file
    system objects, random number generators, ...).
  + don't mix =session= and =cache=
- =:exports= which part of code block to export (=code=, =results=, =both=,
  =none=)
- =:tangle=, essential for *source code extraction in literate programming*.
  Documents on creation are /woven/ with code and documentation. on export, code
  is /tangled/ for execution by a computer. This document for example by
  execution would be recomposed into one or more separate files, while variables
  will be expanded, references resolved etc
  + =no= (default), do not extract code in a source code file
  + =yes=, export code block to source file. file name derived from name of org
    file, file extension derived from source code language id
  + =:tangle FILENAME= export to source file with FILENAME. =:mkdirp yes= creates
    parent directories
  + =:comments= (default: =no=)
    * =link= (formerly: =yes=), wrap the code block in comments, include links
      pointing back to the place in the org file from where the code was tangled
    * =org=, nearest headline text from Org file is inserted as comment
    * =both=, both =link= and =org=
    * =noweb=, includes =link= plus expands Noweb references and wraps them in
      link comments inside the body of the code block
  + =:shebang= (e.g. =shebang "#!/bin/bash=) turns results into executable
    script files by first inserting string as the first line of tangled file +
    turn on file's executable permission
  + =:tangle-mode= can set permissions (overrides shebang)
    * =:tangle-mode (identity #o444)= makes read-only
    * =:tangle-mode (identity #o755)= makes executable
  + =:no-expand= no code block expansion during tangling (no effect for normal
    source block execution)
- =:noweb= (default: =no=)
  + =yes=, expansion of Noweb syntax references like =<< CODE-BLOCK-ID >>= when
    evaluating, tangling, or exporting.
  + =tangle= only when tangling, =no-export= when evaluating or tangling
  + =strip-export=, =eval=
  + =:noweb-ref NAME= concatenates the block to a noweb block with NAME. Can
    also be set in a =:PROPERTY:= drawer at the sub-tree or file level.
  + =:noweb-sep= changes the separator between each noweb reference
    concatenation (Default: newline)
  + =<< code-block-name(optional arguments) >>= includes the results of a code
    block rather than its body! Note that the code block needs a NAME keyword
    (like =#+NAME: code-block-name=).

***** emacs commands for =org-babel=
- =C-c '= to edit current code block in new major mode edit buffer containing
  the body of the source code block, use =C-c '= again to close buffer and
  return to the org buffer

***** accessing the ara cluster of FSU
#+BEGIN_SRC sh :results output :dir :dir /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/
echo $PWD
echo $HOSTNAME
#+END_SRC

#+RESULTS:
: /home/ye53nis
: login01

- Nice! Can we access the different nodes?

#+BEGIN_SRC sh :results output :exports both :dir :dir /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/
sinfo
#+END_SRC


#+RESULTS:
#+begin_example
PARTITION   AVAIL  TIMELIMIT  NODES  STATE NODELIST
b_test         up   10:00:00      1  alloc node001
b_standard*    up 8-08:00:00     62    mix node[003-005,009-016,021-022,027-030,032-033,038,049-051,053,061-062,064,071-072,075,081-089,091-092,096-101,108-110,112-117,122-125,131-132]
b_standard*    up 8-08:00:00     69  alloc node[002,006-008,017-020,023-026,031,034-037,039-048,052,054-060,063,065-070,073-074,076-080,090,093-095,102-107,111,118-121,126,133-136]
gpu_test       up    1:00:00      1   idle node127
gpu_p100       up 8-08:00:00      2   idle node[128-129]
gpu_v100       up 8-08:00:00      1    mix node130
b_fat          up 8-08:00:00      4    mix node[137-140]
s_test         up    3:00:00      1  alloc node141
s_standard     up 8-08:00:00     68    mix node[143-144,150,153,156-157,162,165,167,170-172,175,179-183,185-189,195-196,199-200,204-212,214-217,219-222,224-226,232,238,252-256,262-267,293,295-296,302-303,308-310]
s+_standard     up 8-08:00:00     77  alloc node[142,145-149,154-155,158-161,163-164,166,168-169,173-174,176-178,184,190-194,197-198,201,213,223,227-231,233-237,239-251,257-258,260-261,268,294,297-301,304-307,311-316]
s_standard     up 8-08:00:00      6   idle node[151-152,202-203,218,259]
s_fat          up 8-08:00:00      1    mix node271
s_fat          up 8-08:00:00      3  alloc node[269-270,272]
#+end_example

Sweet, now we would need a tmux session to be able to leave jobs running, when
we disconnect the SSH pipe from the local machine.

#+BEGIN_SRC sh :results output :exports both :dir :dir /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/
tmux attach -t jupyter
#+END_SRC

#+RESULTS:

This naive approach seems not to work. Some research showed this as promising:
https://github.com/ahendriksen/ob-tmux

** exp-200402-test
   :LOGBOOK:
   CLOCK: [2020-04-02 Do 12:05]--[2020-04-02 Do 12:07] =>  0:02
   :END:
*** git
#+begin_src sh :results verbatim
git log -1
#+end_src

#+RESULTS:
: commit 5155597b868fd45db254bc8d631ff47d69ce8363
: Author: Apoplex <oligolex@vivaldi.net>
: Date:   Thu Apr 2 12:03:48 2020 +0200
:
:     First experiments org mode + git literate program
*** Technical and conceptional setup
**** TODO Execute a script on Ara cluster with literate programming
     DEADLINE: <2020-04-08 Mi>
     :LOGBOOK:
     CLOCK: [2020-04-09 Do 23:56]--[2020-04-10 Fr 00:35] =>  0:39
     CLOCK: [2020-04-09 Do 16:18]--[2020-04-09 Do 16:25] =>  0:07
     CLOCK: [2020-04-09 Do 13:15]--[2020-04-09 Do 13:25] =>  0:10
     CLOCK: [2020-04-08 Mi 18:06]--[2020-04-08 Mi 18:10] =>  0:04
     CLOCK: [2020-04-03 Fr 18:19]--[2020-04-03 Fr 18:19] =>  0:00
     CLOCK: [2020-04-03 Fr 17:57]--[2020-04-03 Fr 18:02] =>  0:05
     CLOCK: [2020-04-03 Fr 13:34]--[2020-04-03 Fr 13:34] =>  0:00
     CLOCK: [2020-04-03 Fr 11:01]--[2020-04-03 Fr 11:50] =>  0:49
     CLOCK: [2020-04-02 Do 21:15]--[2020-04-02 Do 21:15] =>  0:00
     CLOCK: [2020-04-02 Do 20:40]--[2020-04-02 Do 20:50] =>  0:10
     CLOCK: [2020-04-02 Do 14:01]--[2020-04-02 Do 15:35] =>  1:34
     CLOCK: [2020-04-02 Do 12:08]--[2020-04-02 Do 12:26] =>  0:18
     :END:
1. connect to FSU VPN (still via normal terminal)
2. connect to ara via ssh and check if a tmux session exists
#+BEGIN_SRC sh :results output :dir :dir /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/ :session new-test
  echo $PWD
  echo $HOSTNAME
#+END_SRC

#+RESULTS:
:
: $ /home/ye53nis
: $ login01

#+BEGIN_SRC sh :results output :session new-test
  tmux -V
  tmux ls
echo $HOSTNAME
#+END_SRC

#+RESULTS:
: tmux 1.8
: $ protocol version mismatch (client 7, server 8)
: $ login01

#+BEGIN_SRC sh :results output :session april-8
  tmux attach new -d
#+END_SRC

#+RESULTS:
: no server running on /tmp/tmux-1000/default

#+BEGIN_SRC sh :results output :session april-8
  tmux -V
  tmux ls
#+END_SRC

#+RESULTS:
: tmux 3.0a
: no server running on /tmp/tmux-1000/default

#+BEGIN_SRC tmux :socket ~/.tmux-local-socket-remote-machine :session
echo $PWD
#+END_SRC
2. connect to ara via ssh and start a tmux session (So that my programs on ara
   can be run even if I am not connected)

#+BEGIN_SRC sh :results silent :session ara
ssh ye53nis@ara-login01.rz.uni-jena.de -t tmux new -d
#+END_SRC
ssh <remote host> -t /path/to/tmux a -t <my-session-name>
- hurray, we created a new tmux out of this org file! lets check:

#+BEGIN_SRC sh :results output :session tmux-setup
echo $PWD
echo $HOSTNAME
tmux ls
tmux attach -S /tmp/tmux-67339/ attach -s 2
#+END_SRC

#+RESULTS:
:
: /home/lex/Programme/drmed-git
: Topialex
: error connecting to /tmp/tmux-1000/default (No such file or directory)
: tmux: unknown option -- S
: error connecting to /tmp/tmux-1000/default (No such file or directory)

- now lets see if we can connect this tmux session to our local machine

#+BEGIN_SRC sh :results silent :session ara
REMOTE_SOCKET=$(ssh ye53nis@ara-login01.rz.uni-jena.de 'tmux list-sessions /tmp/tmux-67339/default' | head -1)
echo $REMOTE_SOCKET
#+END_SRC

#+RESULTS:
: ye53nis@ara-login01.rz.uni-jena.de's password:
: sh-5.0$

#+BEGIN_SRC sh :results output :session ara
echo $REMOTE_SOCKET
#+END_SRC

#+RESULTS:

3. use ob-tmux to connect to the tmux session

#+BEGIN_SRC tmux :socket ~/.tmux-local-socket-remote-machine :session hello
echo test


#+END_SRC


- it does not yet work, but these commands seem to work, lets see tomorrow:
  - =REMOTE_SOCKET=$(ssh ara 'tmux ls -F tmp/tmux-67339/default' |head -1)=
  - =ssh ara -tfN -D ~/.tmux-local-socket-remote-machine:$REMOTE_SOCKET=

- trying out =ob-tmux=

#+BEGIN_SRC tmux :session hello
tmux attach -t
#+END_SRC

#+BEGIN_SRC tmux :session hello:new-window
echo hello world in new-window
#+END_SRC

- trying out other connection with server

#+BEGIN_SRC sh :results output :dir :dir /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/ :session new-test

 :dir
    /scp:dand@yakuba.princeton.edu:=

#+BEGIN_SRC sh :results output :dir /scp:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis
echo hello
#+END_SRC

#+RESULTS:
: sh: :dir: command not found
: $ sh: /scp:dand@yakuba.princeton.edu:=: No such file or directory
: $ /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/ #$ /ssh:ye53nis@ara-login01.rz.uni-jena.de:/home/ye53nis/ #$ hello


***** useful notes on the way
      - http://www.howardism.org/Technical/Emacs/literate-devops.html seems to
        be a good blog about using org babel
      - this also seems to be a good resource
        https://lgfang.github.io/mynotes/utils/tmux.html
      - how to get around "bind: address already in use" or "cannot listen to
        port" errors:
        https://askubuntu.com/questions/447820/ssh-l-error-bind-address-already-in-use
        https://unix.stackexchange.com/questions/427189/how-to-cleanup-ssh-reverse-tunnel-socket-after-connection-closed
**** TODO [#A] Setup of literate programming OR jupytex or the like
     :LOGBOOK:
     CLOCK: [2020-04-02 Do 13:08]--[2020-04-02 Do 13:38] =>  0:30
     :END:

**** TODO [#A] Further setup of git branching model
**** TODO [#C] Set up Dropbox or git annex

** exp-200410-test
   :LOGBOOK:
   CLOCK: [2020-04-10 Fr 11:47]--[2020-04-10 Fr 11:52] =>  0:05
   :END:
*** git
#+begin_src sh :results verbatim
git log -1
#+end_src

#+RESULTS:
: commit 9ff351312ecdf37dd36df3083b0d5c95a7c7824f
: Author: Apoplex <oligolex@vivaldi.net>
: Date:   Fri Apr 3 01:07:16 2020 +0200
:
:     ssh and tmux
*** Technical and conceptional setup
**** Connect to jupyter kernels via =org-babel=
     :LOGBOOK:
     CLOCK: [2020-04-10 Fr 13:14]--[2020-04-10 Fr 14:36] =>  1:22
     CLOCK: [2020-04-10 Fr 11:52]--[2020-04-10 Fr 12:28] =>  0:36
     :END:

1. Locally start a jupyter-python session, executed asynchro

#+BEGIN_SRC jupyter-python :session py :kernel python3
x = 'foo'
y = 'bar'
x + ' ' + y
#+END_SRC

#+RESULTS:
: foo bar

2. Connecting to an existing kernel

#+BEGIN_SRC jupyter-python :session /home/lex/.local/share/jupyter/runtime/kernel-82cf194f-94c9-4323-b26e-d8c596e8f818.json :kernel python3
x = 'foo'
y = 'bar'
x + ' ' + y
#+END_SRC

#+RESULTS:
: foo bar

1. Connecting to an existing kernel on the ara HPC
   1. =sudo openconnect vpn.uni-jena.de=
   2. connect to tmux session or create new one on login node
   3.

#+BEGIN_SRC jupyter-python :session /jpy:localhost#8889 :kernel python3
x = 'foo'
y = 'bar'
x + ' ' + y
#+END_SRC

#+RESULTS:
: foo bar

#+BEGIN_SRC jupyter-python :session /jpy:localhost#8889 :kernel python3 :output verbatim
  import sys

print(sys.platform)
print(sys.path)
#+END_SRC

#+RESULTS:
: linux
: ['/home/lex/Programme/drmed-git', '/home/lex/Programme/miniconda3/envs/tensorflow_env/lib/python37.zip', '/home/lex/Programme/miniconda3/envs/tensorflow_env/lib/python3.7', '/home/lex/Programme/miniconda3/envs/tensorflow_env/lib/python3.7/lib-dynload', '', '/home/lex/Programme/miniconda3/envs/tensorflow_env/lib/python3.7/site-packages', '/home/lex/Programme/miniconda3/envs/tensorflow_env/lib/python3.7/site-packages/IPython/extensions', '/home/lex/.ipython']

It seems we are now on our local environment...

#+BEGIN_SRC jupyter-python :session /jpy:localhost#8889:5f0f2373-c8d8-4bf1-a491-40fb8e314863 :kernel python3
x = 'foo'
y = 'bar'
x + ' ' + y
#+END_SRC

#+RESULTS:
: foo bar

#+BEGIN_SRC jupyter-python :session /jpy:localhost#8889:5f0f2373-c8d8-4bf1-a491-40fb8e314863 :kernel python3
  import os

  ramlist = os.popen('free -th').readlines()[-1].split()[1:]

  print('No of CPUs in system:', os.cpu_count())
  print('No of CPUs the current process can use:',
        len(os.sched_getaffinity(0)))
  print('load average:', os.getloadavg())
  print(os.uname())
  print('PID of process:', os.getpid())
  print('RAM total: {}, RAM used: {}, RAM free: {}'.format(
      ramlist[0], ramlist[1], ramlist[2]))

  !echo the current directory: $PWD
  !echo My disk usage:
  !df -h
  !conda list
#+END_SRC

#+RESULTS:
#+BEGIN_EXAMPLE
No of CPUs in system: 48
No of CPUs the current process can use: 32
load average: (0.04, 0.03, 0.05)
posix.uname_result(sysname='Linux', nodename='node020', release='3.10.0-957.1.3.el7.x86_64', version='#1 SMP Thu Nov 29 14:49:43 UTC 2018', machine='x86_64')
PID of process: 33598
RAM total: 137G, RAM used: 1.4G, RAM free: 111G
the current directory: /home/ye53nis
My disk usage:
Filesystem           Size  Used Avail Use% Mounted on
/dev/sda1             50G  4.3G   46G   9% /
devtmpfs              63G     0   63G   0% /dev
tmpfs                 63G  372M   63G   1% /dev/shm
tmpfs                 63G   43M   63G   1% /run
tmpfs                 63G     0   63G   0% /sys/fs/cgroup
nfs01-ib:/home        80T   57T   24T  71% /home
nfs03-ib:/pool/work  100T   77T   24T  77% /nfsdata
nfs01-ib:/cluster    2.0T  312G  1.7T  16% /cluster
/dev/sda5            2.0G   34M  2.0G   2% /tmp
/dev/sda3            6.0G  447M  5.6G   8% /var
/dev/sda6            169G  875M  168G   1% /local
beegfs_nodev         524T  412T  113T  79% /beegfs
tmpfs                 13G     0   13G   0% /run/user/67339
# packages in environment at /cluster/miniconda3:
#
# Name                    Version                   Build  Channel
_tflow_select             2.3.0                       mkl
absl-py                   0.7.1                    py37_0
alembic                   1.4.1                    pypi_0    pypi
asn1crypto                0.24.0                   py37_0
asteval                   0.9.14             pyh24bf2e0_0    conda-forge
astor                     0.7.1                    py37_0
astropy                   4.0                      pypi_0    pypi
attrs                     19.1.0                   pypi_0    pypi
backcall                  0.1.0                    pypi_0    pypi
bcftools                  1.9                  ha228f0b_4    bioconda
bedtools                  2.28.0               hdf88d34_0    bioconda
blas                      1.0                         mkl
bleach                    3.1.0                    pypi_0    pypi
bzip2                     1.0.6                h14c3975_5
c-ares                    1.15.0               h7b6447c_1
ca-certificates           2019.5.15                     0
cachetools                4.0.0                    pypi_0    pypi
certifi                   2019.3.9                 py37_0
cffi                      1.12.2           py37h2e261b9_1
chardet                   3.0.4                    py37_1
click                     7.0                      pypi_0    pypi
cloudpickle               1.3.0                    pypi_0    pypi
conda                     4.6.14                   py37_0
configparse               0.1.5                    pypi_0    pypi
configparser              4.0.2                    pypi_0    pypi
corner                    2.0.1                    pypi_0    pypi
cpnest                    0.9.9                    pypi_0    pypi
cryptography              2.6.1            py37h1ba5d50_0
curl                      7.64.1               hbc83047_0
cycler                    0.10.0                   py37_0
cython                    0.29.14                  pypi_0    pypi
data                      0.4                      pypi_0    pypi
databricks-cli            0.9.1                    pypi_0    pypi
dbus                      1.13.6               h746ee38_0
decorator                 4.4.0                    pypi_0    pypi
defusedxml                0.6.0                    pypi_0    pypi
docker                    4.2.0                    pypi_0    pypi
entrypoints               0.3                      pypi_0    pypi
expat                     2.2.6                he6710b0_0
flask                     1.1.1                    pypi_0    pypi
fontconfig                2.13.0               h9420a91_0
freetype                  2.9.1                h8a8886c_1
funcsigs                  1.0.2                    pypi_0    pypi
future                    0.17.1                   py37_0
gast                      0.2.2                    py37_0
gitdb                     4.0.2                    pypi_0    pypi
gitpython                 3.1.0                    pypi_0    pypi
glib                      2.56.2               hd408876_0
google-auth               1.11.2                   pypi_0    pypi
google-auth-oauthlib      0.4.1                    pypi_0    pypi
google-pasta              0.1.8                    pypi_0    pypi
gorilla                   0.3.0                    pypi_0    pypi
grpcio                    1.27.2                   pypi_0    pypi
gst-plugins-base          1.14.0               hbbd80ab_1
gstreamer                 1.14.0               hb453b48_1
gunicorn                  20.0.4                   pypi_0    pypi
h5py                      2.9.0            py37h7918eee_0
hdf5                      1.10.4               hb1b8bf9_0
htseq                     0.11.2           py37h637b7d7_1    bioconda
htslib                    1.9                  ha228f0b_7    bioconda
icu                       58.2                 h9c2bf20_1
idna                      2.8                      py37_0
intel-openmp              2019.3                      199
ipykernel                 5.1.1                    pypi_0    pypi
ipython                   7.5.0                    pypi_0    pypi
ipython-genutils          0.2.0                    pypi_0    pypi
ipywidgets                7.4.2                    pypi_0    pypi
itsdangerous              1.1.0                    pypi_0    pypi
jedi                      0.13.3                   pypi_0    pypi
jinja2                    2.10.1                   pypi_0    pypi
joblib                    0.13.2                   py37_0
jpeg                      9b                   h024ee3a_2
jsonschema                3.0.1                    pypi_0    pypi
jupyter                   1.0.0                    pypi_0    pypi
jupyter-client            5.2.4                    pypi_0    pypi
jupyter-console           6.0.0                    pypi_0    pypi
jupyter-core              4.4.0                    pypi_0    pypi
keras-applications        1.0.8                    pypi_0    pypi
keras-preprocessing       1.1.0                    pypi_0    pypi
kiwisolver                1.1.0            py37he6710b0_0
krb5                      1.16.1               h173b8e3_7
last                      874                  hdbcaa40_2    bioconda
latex                     0.7.0                    pypi_0    pypi
libcurl                   7.64.1               h20c2e04_0
libdeflate                1.0                  h14c3975_1    bioconda
libedit                   3.1.20181209         hc058e9b_0
libffi                    3.2.1                hd88cf55_4
libgcc-ng                 8.2.0                hdf63c60_1
libgfortran-ng            7.3.0                hdf63c60_0
libpng                    1.6.37               hbc83047_0
libprotobuf               3.7.1                hd408876_0
libssh2                   1.8.2                h1ba5d50_0
libstdcxx-ng              8.2.0                hdf63c60_1
libuuid                   1.0.3                h1bed415_2
libxcb                    1.13                 h1bed415_1
libxml2                   2.9.9                he19cac6_0
lmfit                     0.9.13             pyh24bf2e0_0    conda-forge
mako                      1.1.2                    pypi_0    pypi
markdown                  3.1                      py37_0
markupsafe                1.1.1                    pypi_0    pypi
matplotlib                3.0.3            py37h5429711_0
minimap2                  2.17                 h84994c4_0    bioconda
mistune                   0.8.4                    pypi_0    pypi
mkl                       2019.3                      199
mkl_fft                   1.0.12           py37ha843d7b_0
mkl_random                1.0.2            py37hd81dba3_0
mlflow                    1.7.0                    pypi_0    pypi
mock                      2.0.0                    py37_0
mpi4py                    3.0.3                    pypi_0    pypi
multipletau               0.3.3                    pypi_0    pypi
nanosim                   2.2.0                      py_0    bioconda
nbconvert                 5.5.0                    pypi_0    pypi
nbformat                  4.4.0                    pypi_0    pypi
ncurses                   6.1                  he6710b0_1
notebook                  5.7.8                    pypi_0    pypi
numpy                     1.16.3           py37h7e9f1db_0
numpy-base                1.16.3           py37hde5b4d6_0
oauthlib                  3.1.0                    pypi_0    pypi
openssl                   1.1.1c               h7b6447c_1
opt-einsum                3.2.0                    pypi_0    pypi
pandas                    0.24.2           py37he6710b0_0
pandocfilters             1.4.2                    pypi_0    pypi
parso                     0.4.0                    pypi_0    pypi
pbr                       5.1.3                      py_0
pcre                      8.43                 he6710b0_0
pexpect                   4.7.0                    pypi_0    pypi
pickleshare               0.7.5                    pypi_0    pypi
pip                       19.0.3                   py37_0
prometheus-client         0.7.0                    pypi_0    pypi
prometheus-flask-exporter 0.13.0                   pypi_0    pypi
prompt-toolkit            2.0.9                    pypi_0    pypi
protobuf                  3.11.3                   pypi_0    pypi
ptemcee                   1.0.0                    pypi_0    pypi
ptyprocess                0.6.0                    pypi_0    pypi
pyasn1                    0.4.8                    pypi_0    pypi
pyasn1-modules            0.2.8                    pypi_0    pypi
pybedtools                0.8.0            py37he860b03_1    bioconda
pycosat                   0.6.3            py37h14c3975_0
pycparser                 2.19                     py37_0
pydot                     1.4.1                    pypi_0    pypi
pygments                  2.4.2                    pypi_0    pypi
pyopenssl                 19.0.0                   py37_0
pyparsing                 2.4.0                      py_0
pyqt                      5.9.2            py37h05f1152_2
pyrsistent                0.15.2                   pypi_0    pypi
pysam                     0.15.2           py37h4b7d16d_3    bioconda
pysocks                   1.6.8                    py37_0
pystan                    2.19.1.2dev              pypi_0    pypi
python                    3.7.3                h0371630_0
python-dateutil           2.8.0                    py37_0
python-editor             1.0.4                    pypi_0    pypi
python-graphviz           0.13.2                   pypi_0    pypi
pytz                      2019.1                     py_0
pyyaml                    5.3                      pypi_0    pypi
pyzmq                     18.0.1                   pypi_0    pypi
qt                        5.9.7                h5867ecd_1
qtconsole                 4.5.1                    pypi_0    pypi
querystring-parser        1.2.4                    pypi_0    pypi
readline                  7.0                  h7b6447c_5
requests                  2.21.0                   py37_0
requests-oauthlib         1.3.0                    pypi_0    pypi
rsa                       4.0                      pypi_0    pypi
ruamel_yaml               0.15.46          py37h14c3975_0
samtools                  1.9                 h8571acd_11    bioconda
scikit-learn              0.21.1           py37hd81dba3_0
scipy                     1.4.1                    pypi_0    pypi
seaborn                   0.9.0                    pypi_0    pypi
send2trash                1.5.0                    pypi_0    pypi
setuptools                41.0.0                   py37_0
shutilwhich               1.1.0                    pypi_0    pypi
simplejson                3.17.0                   pypi_0    pypi
sip                       4.19.8           py37hf484d3e_0
six                       1.12.0                   py37_0
smmap                     3.0.1                    pypi_0    pypi
sqlalchemy                1.3.13                   pypi_0    pypi
sqlite                    3.27.2               h7b6447c_0
sqlparse                  0.3.1                    pypi_0    pypi
tabulate                  0.8.6                    pypi_0    pypi
tempdir                   0.7.1                    pypi_0    pypi
tensorboard               2.1.1                    pypi_0    pypi
tensorflow                2.1.0                    pypi_0    pypi
tensorflow-estimator      2.1.0                    pypi_0    pypi
termcolor                 1.1.0                    py37_1
terminado                 0.8.2                    pypi_0    pypi
testpath                  0.4.2                    pypi_0    pypi
tifffile                  0.15.1          py37h3010b51_1001    conda-forge
tk                        8.6.8                hbc83047_0
tornado                   6.0.2            py37h7b6447c_0
tqdm                      4.43.0                   pypi_0    pypi
traitlets                 4.3.2                    pypi_0    pypi
uncertainties             3.1.1                    py37_0    conda-forge
urllib3                   1.24.1                   py37_0
wcwidth                   0.1.7                    pypi_0    pypi
webencodings              0.5.1                    pypi_0    pypi
websocket-client          0.57.0                   pypi_0    pypi
werkzeug                  0.15.2                     py_0
wheel                     0.33.1                   py37_0
widgetsnbextension        3.4.2                    pypi_0    pypi
wrapt                     1.12.1                   pypi_0    pypi
xz                        5.2.4                h14c3975_4
yaml                      0.1.7                had09818_2
zlib                      1.2.11               h7b6447c_3
#+END_EXAMPLE
** exp-200412-test
*** git
#+begin_src sh :results verbatim
git log -1
#+end_src

#+RESULTS:
: commit 9ff351312ecdf37dd36df3083b0d5c95a7c7824f
: Author: Apoplex <oligolex@vivaldi.net>
: Date:   Fri Apr 3 01:07:16 2020 +0200
:
:     ssh and tmux
*** Technical and conceptional setup
    :LOGBOOK:
    CLOCK: [2020-04-12 So 13:00]
    :END:
    :PROPERTIES:
    :header-args:jupyter-python:    :session /jpy:localhost#8889:06f784c5-83f5-43ef-b03d-3bdb6470e26c
    :END:

**** Connect to ara cluster and get metadata
